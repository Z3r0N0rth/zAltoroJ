# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build
    - uses: actions/upload-artifact@v2
      with:
        name: artifact
        if-no-files-found: error # 'warn' or 'ignore' are also available, defaults to `warn` 
        path: ${{ github.workspace }}
  security:
    runs-on: ubuntu-latest
    env:
      OWASP_DEPCHECK: WbJHgm_pSg-Ujk6Nt3mVdQ
      SONARQUBE: I33Mh0P1TwG9HuKHWkC3ug
      VERACODE: AWP_2aS6ShSvBuysivS8gA
      SCENARIOS: "checkmarx-v9, owasp-dep-v5, nexusiq, sonarqube-v793, veracode"
    steps:
    - uses: jungwinter/split@v1
      id: split
      with:
        msg: ${{ env.SCENARIOS }}
        seperator: ', ' 
    - name: loop through stuff 
      run: | 
       steps.split.outputs._0 == 'checkmarx-v9'
       for s in steps.split.outputs
        s 
    - uses: actions/download-artifact@v2
      with:
        name: artifact
    #- name: OWASP DepCheck
    #  run: | 
     #   docker run -e POLICY_ID=${{ env.OWASP_DEPCHECK }} -v $GITHUB_WORKSPACE:/code -v $GITHUB_WORKSPACE:/results -e CYBRIC_API_KEY=${{ secrets.ZN_API_KEY }} zeronorth/integration:latest python cybric.py
  #  - name: Sonarqube
    #  run: | 
    #    docker run -e POLICY_ID=${{ env.SONARQUBE }} -v $GITHUB_WORKSPACE:/code -v $GITHUB_WORKSPACE:/results -v /var/run/docker.sock:/var/run/docker.sock -e SONAR_JAVA_LIBRARY_DIR=\".\" -e SONAR_JAVA_BINARY_DIR=\".\" -e CYBRIC_API_KEY=${{ secrets.ZN_API_KEY }} zeronorth/integration:latest python cybric.py
   # - name: Veracode
    #  run: | 
     #   docker run -e POLICY_ID=${{ env.VERACODE }} -v $GITHUB_WORKSPACE:/code -v $GITHUB_WORKSPACE:/results -e CYBRIC_API_KEY=${{ secrets.ZN_API_KEY }} zeronorth/integration:latest python cybric.py


